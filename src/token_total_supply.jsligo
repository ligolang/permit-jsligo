#import "ligo-extendable-fa2/lib/multi_asset/fa2.mligo" "FA2"

export type t = big_map<FA2.Ledger.token_id, nat>;

const getSupply = (supply: t, tokenId: FA2.Ledger.token_id) : nat =>
    match (Big_map.find_opt(tokenId, supply)) {
        when(Some(a)): a;
        when(None()): (failwith(FA2.Errors.undefined_token) as nat);
   }

export const createSupply = (supply: t, newTokenId: FA2.Ledger.token_id, amount_: nat) : t => {
    return Big_map.add(newTokenId, amount_, supply)
};

export const increaseSupply = (supply: t, tokenId: FA2.Ledger.token_id, amount_: nat) : t => {
    let curAmount = getSupply(supply, tokenId);
    let newAmount = curAmount + amount_;
    return Big_map.update(tokenId, (Some(newAmount)), supply)
};

export const decreaseSupply = (supply: t, tokenId: FA2.Ledger.token_id, amount_: nat) : t => {
    let curAmount = getSupply(supply, tokenId);
    let newSupply = abs(curAmount - amount_);
    return Big_map.update(tokenId, (Some(newSupply)), supply);
};
